---
# ************************************************************************
# Description: Main Provisiong ZDI 
# Parameters:
#   vdi_owner_email: email address of the ZDI owner
#   vdi_note: user enter notes for the VDI
#   time_zone: America/Los_Angeles
#   email_cc_list: email cc list
#   tz_environment: TZDEV or TZPROD
# 
# ************************************************************************
- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    time_zone: America/Los_Angeles
    email_cc_list: qing.zhang@timz003.com;qing.zhang@timz003.com;qing.zhang@timz003.com
    vdi_owner_email: qing.zhang@timz003.com
  tasks:
    - name: Checking user input
      fail:
        msg: "Invalid ZDI owner email address '{{ vdi_owner_email }}'."
      when: vdi_owner_email is not search("@")

    - set_fact:
        owner_email_tmp: "{{ vdi_owner_email | lower }}"

    - name: Checking email address
      fail:
        msg: "Invalid ZDI owner timz003 email address '{{ vdi_owner_email }}'."
      when: owner_email_tmp is not search("@timz003.com") or owner_email_tmp is search("your.name@timz003.com")

    - name: Set ZDI owner name
      set_fact:
        vdi_owner: "{{ owner_email_tmp | replace('@timz003.com', '') }}"

    - debug: var=vdi_owner

    - set_fact:
        vdi_start_time: "{{ lookup('pipe', 'TZ={{ time_zone }} date +\"%a %b %d %H:%M:%S %Y %Z\"') }}"
    - name: Get ZDI name
      include_role:
        name: vdi_name
        tasks_from: live_scan

    - pause:
        seconds: 1

    - include_role:
        name: vdi_ops
        tasks_from: find_vdi
      when: vdi_name is defined

    - name: Retry ZDI name if ZDI exists
      include_role:
        name: vdi_name
        tasks_from: live_scan
      when: vdi_facts.failed == false
 
    # this will  get tower job id, and login user name, not email address though
    - name: get the Ansible Tower login user
      include_role:
        name: tower_login_user

    - name: Provision ZDI machine
      include_role:
        name: vdi_ops
        tasks_from: provision
      vars:
        # vdi_note: Created by ZDI automation
        extend_vdi_lease: no

    - name: Notify the completion of provisioning
      include_role:
        name: vdi_ops
        tasks_from: notify_provision 
